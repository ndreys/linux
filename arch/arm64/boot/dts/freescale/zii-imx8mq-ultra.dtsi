/*
 * Copyright 2018 Zii
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */



#include "imx8mq.dtsi"

/ {
	model = "Zii Ultra Base - i.MX8MQ";
	compatible = "fsl,imx8mq-evk", "fsl,imx8mq";

	chosen {
		bootargs = "console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200";
		stdout-path = &uart1;
	};

	aliases {
		mdio-gpio0 = &mdio_bitbang;
		rtc0 = &rtc_ds1341;
		/* spi0 = &ecspi1; */
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usdhc2_vmmc: usdhc2_vmmc {
			compatible = "regulator-fixed";
			regulator-name = "VSD_3V3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_gpio_dvfs: regulator-gpio {
			compatible = "regulator-gpio";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_dvfs>;
			regulator-min-microvolt = <900000>;
			regulator-max-microvolt = <1000000>;
			regulator-name = "gpio_dvfs";
			regulator-type = "voltage";
			gpios = <&gpio3 16 GPIO_ACTIVE_HIGH>;
			states = <900000 0x1 1000000 0x0>;
		};

		reg_1p8v: regulator-1p8v {
			compatible = "regulator-fixed";
			regulator-name = "GEN_1V8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-always-on;
		};

		reg_3p3v: regulator-3p3v {
			compatible = "regulator-fixed";
			regulator-name = "GEN_3V3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		reg_5p0v_main: regulator-5p0v-main {
			compatible = "regulator-fixed";
			regulator-name = "5V_MAIN";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			regulator-always-on;
		};
	};

	cs2000_ref: cs2000-ref {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <24000000>;
	};

	cs2000_in_dummy: cs2000-in-dummy {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <0>;
	};
#if 0
	sound1 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "Front";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-master = <&sound1_codec>;
		simple-audio-card,frame-master = <&sound1_codec>;
		simple-audio-card,widgets =
			"Headphone", "Headphone Jack";
		simple-audio-card,routing =
			"Headphone Jack", "HPLEFT",
			"Headphone Jack", "HPRIGHT",
			"LEFTIN", "HPL",
			"RIGHTIN", "HPR";
		simple-audio-card,aux-devs = <&hpa1>;

		simple-audio-card,cpu {
			sound-dai = <&sai2>;
		};

		sound1_codec: simple-audio-card,codec {
			sound-dai = <&codec1>;
			clocks = <&cs2000_ref>;
		};
	};
#endif
	mdio_bitbang: mdio {
		compatible = "virtual,mdio-gpio";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mdio_bitbang>;
		gpios = <&gpio1 13 GPIO_ACTIVE_HIGH
		         &gpio1 14 GPIO_ACTIVE_HIGH>;

		phy_gpio: ethernet-phy@0 {
			pinctrl-0 = <&pinctrl_rmii_phy_irq>;
			pinctrl-names = "default";
			reg = <0>;
			interrupt-parent = <&gpio1>;
			interrupts = <28 IRQ_TYPE_LEVEL_LOW>;
		};
	};

	discrete_outputs {
                compatible = "gpio-of-helper";
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_discrete_out>;
                status = "okay";

		/* This is a bit of a hack to deal with the reset
			GPIO for the KSZ8091 PHY connected to the FEC.
			The PHY is probed via the mdio-gpio bus before the FEC
			is initialized causing a timing problem with the
			reset GPIO. This sets the GPIO to the deasserted
			state prior to the mdio-gpio bus being probed
		*/
                discrete_phy_reset {
                        gpio-name = "micrel_phy_reset_n";
                        gpio = <&gpio1 29 GPIO_ACTIVE_HIGH>;
                        output;
                        init-high;
                };
	};

};

&clk {
	assigned-clocks = <&clk IMX8MQ_AUDIO_PLL1>, <&clk IMX8MQ_AUDIO_PLL2>;
	assigned-clock-rates = <786432000>, <722534400>;
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rmii";
	fsl,magic-packet;
	status = "okay";

	fixed-link {
		speed = <100>;
		full-duplex;
	};

	mdio1: mdio {
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		switch0: switch0@0 {
			compatible = "marvell,mv88e6085";
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0>;
			eeprom-length = <512>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					label = "gigabit_proc";
				};

				port@1 {
					reg = <1>;
					label = "netaux";
				};

				port@2 {
					reg = <2>;
					label = "cpu";
					ethernet = <&fec1>;
					fixed-link {
						speed = <100>;
						full-duplex;
					};
				};

				port@3 {
					reg = <3>;
					label = "netright";
				};

				port@4 {
					reg = <4>;
					label = "netleft";
				};
			};
		};
	};
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	hpa2: amp@60 {
		compatible = "ti,tpa6130a2";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_tpa2>;
		reg = <0x60>;
		power-gpio = <&gpio1 8 GPIO_ACTIVE_HIGH>;
		Vdd-supply = <&reg_5p0v_main>;
	};

	accel: mma8452@1c {
		compatible = "fsl,mma8451";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_accel_int>;
		reg = <0x1c>;
		interrupt-parent = <&gpio3>;
		interrupts = <19 IRQ_TYPE_EDGE_RISING
			      20 IRQ_TYPE_EDGE_RISING>;
	};

	ucs1002: ucs1002@32 {
		compatible = "microchip,ucs1002";
		reg = <0x32>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ucs1002_pins>;
		interrupts-extended = <&gpio3 17 0>, <&gpio3 18 0>;
		microchip,current-limit = <2000000>;
		control-gpios = <&gpio3 10 GPIO_ACTIVE_HIGH>,	 /* EM_EN */
				<&gpio3 11 GPIO_ACTIVE_HIGH>,	 /* M1 */
				<&gpio3 13 GPIO_ACTIVE_HIGH>,	 /* M2 */
				<&gpio3 12 GPIO_ACTIVE_LOW>;	 /* PWR_EN: Polarity is determined by SEL pin */
	};
};

&i2c2 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			sw3a_reg: sw3ab {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
				regulator-always-on;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};
		};
	};

	codec1: codec@18 {
		compatible = "ti,tlv320dac3100";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_codec1>;
		reg = <0x18>;
		#sound-dai-cells = <0>;
		HPVDD-supply = <&reg_3p3v>;
		SPRVDD-supply = <&reg_3p3v>;
		SPLVDD-supply = <&reg_3p3v>;
		AVDD-supply = <&reg_3p3v>;
		IOVDD-supply = <&reg_3p3v>;
		DVDD-supply = <&vgen4_reg>;
		gpio-reset = <&gpio3 3 GPIO_ACTIVE_HIGH>;
	};

	hpa1: amp@60 {
		compatible = "ti,tpa6130a2";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_tpa1>;
		reg = <0x60>;
		power-gpio = <&gpio4 10 GPIO_ACTIVE_HIGH>;
		Vdd-supply = <&reg_5p0v_main>;
	};

	lm75@48 {
		compatible = "national,lm75";
		reg = <0x48>;
	};

	mx8_eepron: at24@54 {
		compatible = "at,24c128";
		pagesize = <32>;
		reg = <0x54>;
	};

	rtc_ds1341: ds1341@68 {
		compatible = "dallas,ds1341";
		reg = <0x68>;
	};
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";

	usb_hub: usb2513b@2c {
		compatible = "microchip,usb2513b";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_usb2513b>;
		#address-cells=<1>;
		#size-cells=<1>;
		reg = <0x2C>;
		reset-gpios = <&gpio3 25 GPIO_ACTIVE_LOW>;
	};

#if 0
	cs2000: clkgen@4e {
		compatible = "cirrus,cs2000-cp";
		reg = <0x4e>;
		#clock-cells = <0>;
		clock-names = "clk_in", "ref_clk";
		clocks = <&cs2000_in_dummy>, <&cs2000_ref>;
		assigned-clocks = <&cs2000>;
		assigned-clock-rates = <24000000>;
	};
#endif
};

&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";

	touchscreen@20 {
		compatible = "syna,rmi4-i2c";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts>;
		reg = <0x20>;
		interrupt-parent = <&gpio1>;
		interrupts = <12 IRQ_TYPE_LEVEL_LOW>;

		#address-cells = <1>;
		#size-cells = <0>;

		rmi4-f01@1 {
			reg = <0x1>;
			syna,nosleep-mode = <2>;
		};

		rmi4-f11@11 {
			reg = <0x11>;
			touchscreen-inverted-y;
			touchscreen-swapped-x-y;
			syna,sensor-type = <1>;
		};

		rmi4-f12@12 {
			reg = <0x12>;
			touchscreen-inverted-y;
			touchscreen-swapped-x-y;
			syna,sensor-type = <1>;
		};
	};

	eeti_touch: eeti_i2c@2a {
		compatible = "eeti,egalax_i2c";
		reg = <0x2a>;
		interrupt-parent = <&gpio1>;
		interrupts = <12 IRQ_TYPE_LEVEL_LOW>;
		int-gpios = <&gpio1 12 0>;
	};
};

&pcie0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie0>;
	reset-gpio = <&gpio1 3 GPIO_ACTIVE_LOW>;
	/* status = "okay"; */
};

&pcie1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie1>;
	reset-gpio = <&gpio1 6 GPIO_ACTIVE_LOW>;
	status = "okay";

	pcie@0,0 {
		reg = <0x000000 0 0 0 0>;

		#address-cells = <3>;
		#size-cells = <2>;

		/* pcie endpoint 01:00.0 */
		eth1: intel,i210@pcie0,0 {
                         reg = <0x010000 0 0 0 0>;
                };
	};
};

#if 0
&ecspi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	cs-gpios = <&gpio5 9 GPIO_ACTIVE_LOW>;
	status = "okay";

	nor_flash: m25p128@0 {
		compatible = "st,m25p128", "jedec,spi-nor";
		#address-cells = <1>;
		#size-cells = <1>;
		spi-max-frequency = <20000000>;
		reg = <0>;
	};
};

&ecspi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "okay";
};
#endif
&uart1 { /* console */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	/* assigned-clocks = <&clk IMX8MQ_CLK_UART1_SRC>; */
	/* assigned-clock-parents = <&clk IMX8MQ_CLK_25M>; */
	status = "okay";
};

&uart2 { /* Supervisory Processor */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	/* assigned-clocks = <&clk IMX8MQ_CLK_UART2_SRC>; */
	/* assigned-clock-parents = <&clk IMX8MQ_SYS1_PLL_80M>; */
	status = "okay";
};

&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	status = "okay";
};
#if 0
&usb_dwc3_0 {
	status = "okay";
	dr_mode = "host";
};

&usb3_phy0 {
	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_1 {
	status = "okay";
	dr_mode = "host";
};

&usb3_phy1 {
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&sai2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	/* assigned-clocks = <&clk IMX8MQ_CLK_SAI2_SRC>, */
	/* 		<&clk IMX8MQ_CLK_SAI2_DIV>; */
	/* assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>; */
	/* assigned-clock-rates = <0>, <24576000>; */
	status = "okay";

	#sound-dai-cells = <0>;
};

&gpu_pd {
	power-supply = <&sw1a_reg>;
};

&vpu_pd {
	power-supply = <&sw1c_reg>;
};

&gpu {
	status = "okay";
};

&vpu {
	status = "okay";
};

#endif

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};
#if 0
&mu {
	status = "okay";
};

&rpmsg{
	/*
	 * 64K for one rpmsg instance:
	 * --0xb8000000~0xb800ffff: pingpong
	 */
	vdev-nums = <1>;
	reg = <0x0 0xb8000000 0x0 0x10000>;
	status = "okay";
};
#endif

&A53_0 {
	operating-points = <
		/* kHz    uV */
		1500000 1000000
		1300000 1000000
		1000000 900000
		800000  900000
	>;
	dc-supply = <&reg_gpio_dvfs>;
};
#if 0
&dcss {
	status = "okay";

	disp-dev = "hdmi_disp";
};

&hdmi {
	status = "okay";
	compatible = "fsl,imx8mq-dp";
	dp-lane-mapping = <0xe4>;
	dp-link-rate = <0x14>;
	dp-num-lanes = <0x4>;

};
#endif

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	zii-imx8mq-rmb3 {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				MX8MQ_IOMUXC_NAND_CLE_GPIO3_IO5		0x41 /* MX8_LCD_BKLT_EN */
				MX8MQ_IOMUXC_UART3_RXD_GPIO5_IO26	0x41 /* MX8_3V3_DISPLAY_EN */
				MX8MQ_IOMUXC_UART3_TXD_GPIO5_IO27	0x41 /* MX8_12V_BACKLIGHT_EN */
				MX8MQ_IOMUXC_GPIO1_IO01_GPIO1_IO1	0x41 /* PIC_POWER_LOSS_INTn */
				MX8MQ_IOMUXC_GPIO1_IO05_GPIO1_IO5	0x41 /* MX8_TO_PIC_INTn */


				MX8MQ_IOMUXC_ENET_TD3_GPIO1_IO18	0x44 /* TP4 */
				MX8MQ_IOMUXC_ENET_TXC_GPIO1_IO23	0x44 /* TP3 */

				MX8MQ_IOMUXC_SAI5_RXD0_GPIO3_IO21	0x41 /* SYS_TYPE_3 */
				MX8MQ_IOMUXC_SAI5_RXD1_GPIO3_IO22	0x41 /* SYS_TYPE_2 */
				MX8MQ_IOMUXC_SAI5_RXD2_GPIO3_IO23	0x41 /* SYS_TYPE_1 */
				MX8MQ_IOMUXC_SAI5_RXD3_GPIO3_IO24	0x41 /* SYS_TYPE_0 */
			>;
		};

		pinctrl_discrete_out: phyresetgrp {
                        fsl,pins = <
                                MX8MQ_IOMUXC_ENET_RD3_GPIO1_IO29	0x04 /* RSTn */
                        >;
                };


		pinctrl_fec1: fec1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ENET_MDC_ENET1_MDC			0x3
				MX8MQ_IOMUXC_ENET_MDIO_ENET1_MDIO		0x23

				MX8MQ_IOMUXC_ENET_TD1_ENET1_RGMII_TD1		0x1f
				MX8MQ_IOMUXC_ENET_TD0_ENET1_RGMII_TD0		0x1f
				MX8MQ_IOMUXC_ENET_RD1_ENET1_RGMII_RD1		0x91
				MX8MQ_IOMUXC_ENET_RD0_ENET1_RGMII_RD0		0x91

				MX8MQ_IOMUXC_ENET_TD2_ENET1_TX_CLK		0x1f
				MX8MQ_IOMUXC_ENET_RXC_ENET1_RX_ER		0x91

				/* Really just test point for now */
				MX8MQ_IOMUXC_GPIO1_IO09_GPIO1_IO9		0x19

				MX8MQ_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL	0x91
				MX8MQ_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL	0x1f
			>;
		};

		pinctrl_mdio_bitbang: bitbangmdiogrp {
			fsl,pins = <
				/* Bitbang MDIO for Micrel PHY */
				MX8MQ_IOMUXC_GPIO1_IO13_GPIO1_IO13	0x44 /* SWITCH_MDC */
				MX8MQ_IOMUXC_GPIO1_IO14_GPIO1_IO14	0x64 /* SWITCH_MDIO */
			>;
		};

		pinctrl_rmii_phy_irq: phygrp {
			fsl,pins = <
				MX8MQ_IOMUXC_ENET_RD2_GPIO1_IO28	0x41
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C1_SCL_I2C1_SCL		0x4000007f
				MX8MQ_IOMUXC_I2C1_SDA_I2C1_SDA		0x4000007f
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C2_SCL_I2C2_SCL		0x4000007f
				MX8MQ_IOMUXC_I2C2_SDA_I2C2_SDA		0x4000007f
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C3_SCL_I2C3_SCL		0x4000007f
				MX8MQ_IOMUXC_I2C3_SDA_I2C3_SDA		0x4000007f
			>;
		};

		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C4_SCL_I2C4_SCL		0x4000007f
				MX8MQ_IOMUXC_I2C4_SDA_I2C4_SDA		0x4000007f
			>;
		};

		pinctrl_pcie0: pcie0grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART4_RXD_PCIE1_CLKREQ_B	0x76
				MX8MQ_IOMUXC_GPIO1_IO03_GPIO1_IO3	0x16
			>;
		};

		pinctrl_pcie1: pcie1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART4_TXD_PCIE2_CLKREQ_B	0x76
				MX8MQ_IOMUXC_GPIO1_IO06_GPIO1_IO6	0x16
			>;
		};

		pinctrl_dvfs: dvfsgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_NAND_READY_B_GPIO3_IO16	0x16
			>;
		};

		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ECSPI1_SS0_ECSPI1_SS0      0x82
				MX8MQ_IOMUXC_ECSPI1_SCLK_ECSPI1_SCLK    0x82
				MX8MQ_IOMUXC_ECSPI1_MISO_ECSPI1_MISO    0x82
				MX8MQ_IOMUXC_ECSPI1_MOSI_ECSPI1_MOSI    0x82
			>;
		};

		pinctrl_ecspi2: ecspi2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ECSPI2_SS0_ECSPI2_SS0      0x82
				MX8MQ_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK    0x82
				MX8MQ_IOMUXC_ECSPI2_MISO_ECSPI2_MISO    0x82
				MX8MQ_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI    0x82
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART1_RXD_UART1_DCE_RX		0x49
				MX8MQ_IOMUXC_UART1_TXD_UART1_DCE_TX		0x49
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART2_TXD_UART2_DCE_TX		0x49
				MX8MQ_IOMUXC_UART2_RXD_UART2_DCE_RX		0x49
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x83
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xc3
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xc3
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xc3
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xc3
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xc3
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xc3
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xc3
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xc3
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xc3
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x83
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x85
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xc5
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xc5
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xc5
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xc5
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xc5
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xc5
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xc5
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xc5
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xc5
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x85
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x87
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xc7
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xc7
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xc7
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xc7
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xc7
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xc7
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xc7
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xc7
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xc7
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x87
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc2_gpio: usdhc2grpgpio {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CD_B_GPIO2_IO12		0x41
				MX8MQ_IOMUXC_SD2_RESET_B_GPIO2_IO19		0x41
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x83
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc3
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc3
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc3
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc3
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc3
				MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT		0xc1
			>;
		};

		pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x85
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc5
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc5
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc5
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc5
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc5
				MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT		0xc1
			>;
		};

		pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x87
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc7
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc7
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc7
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc7
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc7
				MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT		0xc1
			>;
		};

		pinctrl_sai2: sai2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC	0xd6
				MX8MQ_IOMUXC_SAI2_TXC_SAI2_TX_BCLK	0xd6
				MX8MQ_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0	0xd6
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B 0xc6
			>;
		};

		pinctrl_codec1: dac1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_NAND_CE2_B_GPIO3_IO3 0x41
			>;
		};

		pinctrl_tpa1: tpa6130-1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_TXFS_GPIO4_IO10  0x41
			>;
		};

		pinctrl_tpa2: tpa6130-2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO08_GPIO1_IO8  0x41
			>;
		};

		pinctrl_ucs1002_pins: ucs1002grp {
			/* USB Charging Controller */
			fsl,pins = <
				MX8MQ_IOMUXC_NAND_WE_B_GPIO3_IO17    0x41 /*USB_ATT_DETn*/
				MX8MQ_IOMUXC_NAND_DATA04_GPIO3_IO10  0x41 /*USB_EMULATION*/
				MX8MQ_IOMUXC_NAND_DATA05_GPIO3_IO11  0x41 /*USB_MODE1*/
				MX8MQ_IOMUXC_NAND_WP_B_GPIO3_IO18    0x41 /*USB_ALERTn*/
				MX8MQ_IOMUXC_NAND_DATA06_GPIO3_IO12  0x41 /*USB_PWR_CTRL_ENn*/
				MX8MQ_IOMUXC_NAND_DATA07_GPIO3_IO13  0x41 /*USB_MODE2*/
			>;
		};

		pinctrl_usb2513b: usb2513bgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI5_MCLK_GPIO3_IO25    0x41
			>;
		};

		pinctrl_accel_int: accelintgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI5_RXFS_GPIO3_IO19    0x41
				MX8MQ_IOMUXC_SAI5_RXC_GPIO3_IO20     0x41
			>;
		};

		pinctrl_ts: tsgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO11_GPIO1_IO11	0x96
				MX8MQ_IOMUXC_GPIO1_IO12_GPIO1_IO12	0x96
			>;
		};
	};
};
